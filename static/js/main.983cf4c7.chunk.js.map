{"version":3,"sources":["context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Modal.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosReceta","e","target","name","Container","className","Form","onSubmit","preventDefault","Row","Col","md","sm","Control","size","type","placeholder","onChange","as","map","key","strCategory","Button","disabled","variant","ModalContext","ModalProvider","idReceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","ModalInfo","receta","show","setShow","handleClose","onClick","idDrink","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","strDrink","Body","strInstructions","informacionIngredientes","ingredientes","i","push","mostrarIngredientes","Footer","Receta","Card","style","width","Img","src","strDrinkThumb","alt","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.983cf4c7.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Crear el Context\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\nconst CategoriasProvider = (props) => {\r\n  // Crear el state del context\r\n  const [categorias, guardarCategorias] = useState([]);\r\n\r\n  // Ejecutar el llamado a la api\r\n  useEffect(() => {\r\n    const obtenerCategorias = async () => {\r\n      const url = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n\r\n      const categorias = await axios.get(url);\r\n      guardarCategorias(categorias.data.drinks);\r\n    };\r\n    obtenerCategorias();\r\n  });\r\n\r\n  return (\r\n    <CategoriasContext.Provider value={{ categorias }}>\r\n      {props.children}\r\n    </CategoriasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoriasProvider;","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n  const [recetas, guardarRecetas] = useState([]);\r\n  const [busqueda, buscarRecetas] = useState({\r\n    nombre: '',\r\n    categoria: ''\r\n  });\r\n\r\n  const [consultar, guardarConsultar] = useState(false);\r\n\r\n  const { nombre, categoria } = busqueda;\r\n\r\n  useEffect(() => {\r\n    if (consultar) {\r\n      const obtenerRecetas = async () => {\r\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n\r\n        const resultado = await axios.get(url);\r\n        guardarRecetas(resultado.data.drinks);\r\n      };\r\n      obtenerRecetas();\r\n    }\r\n  }, [busqueda, busqueda, nombre, categoria, consultar]);\r\n\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={{ recetas, buscarRecetas, guardarConsultar }}\r\n    >\r\n      {props.children}\r\n    </RecetasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecetasProvider;","import React, { useContext, useState } from 'react'\r\nimport { Form, Row, Col, Button, Container } from 'react-bootstrap';\r\nimport { CategoriasContext } from '../context/CategoriasContext';\r\nimport { RecetasContext } from '../context/RecetasContext';\r\n\r\n\r\nconst Formulario = () => {\r\n\r\n  const [busqueda, guardarBusqueda] = useState({ \r\n    nombre: \"\",\r\n    categoria: \"\"\r\n  });\r\n\r\n  const { categorias } = useContext(CategoriasContext);\r\n  const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n  \r\n  // Leer contenidos\r\n  const obtenerDatosReceta = (e) => {\r\n    guardarBusqueda({\r\n      ...busqueda,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return ( \r\n    <Container className=\"m-2\">\r\n      <Form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          buscarRecetas(busqueda);\r\n          guardarConsultar(true);\r\n        }}\r\n      >\r\n        <Row className=\"mt-4\">\r\n          <Col md={6} sm={12}>\r\n            <Form.Control size=\"sm\" type=\"text\"  className=\"form-control\" name=\"nombre\" placeholder=\"Buscar por ingrediente\" onChange={obtenerDatosReceta}/>\r\n          </Col>\r\n          <Col md={5} sm={12}>\r\n            <Form.Control size=\"sm\" as=\"select\" className=\"form-control\" name=\"categoria\" onChange={obtenerDatosReceta}>\r\n            <option value=\"\">-- Selecciona Categoria --</option>\r\n                {categorias.map(categoria => (\r\n                  <option \r\n                    key={categoria.strCategory}\r\n                    value={categoria.strCategory}\r\n                  >{categoria.strCategory}</option> \r\n                ))}\r\n            </Form.Control>\r\n          </Col>\r\n          <Col md={1}>\r\n            <Button size=\"sm\" type=\"submit\" disabled={!busqueda.categoria} variant=\"primary\">Buscar</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Crear el context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  // state del provider\r\n  const [idReceta, guardarIdReceta] = useState(null);\r\n  const [informacion, guardarReceta] = useState({});\r\n\r\n  // una vez que tenemos una receta, llamar la api\r\n  useEffect(() => {\r\n    const obtenerReceta = async () => {\r\n      if (!idReceta) return;\r\n\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idReceta}`;\r\n\r\n      const resultado = await axios.get(url);\r\n      guardarReceta(resultado.data.drinks[0]);\r\n    };\r\n    obtenerReceta();\r\n  }, [idReceta]);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{ informacion, guardarIdReceta, guardarReceta }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;","import React,{ useState, useContext } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { ModalContext } from \"../context/ModalContext\";\r\nimport '../styles/modal.css';\r\n\r\nconst ModalInfo = ({receta}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n     // Extraer los valores del context\r\n    const { informacion, guardarIdReceta, guardarReceta } = useContext(\r\n        ModalContext\r\n    );\r\n\r\n    // Muestra y formatea los ingredientes\r\n    const mostrarIngredientes = (informacionIngredientes) => {\r\n        let ingredientes = [];\r\n        for (let i = 1; i < 16; i++) {\r\n        if (informacionIngredientes[`strIngredient${i}`]) {\r\n            ingredientes.push(\r\n            <li>\r\n                {informacionIngredientes[`strIngredient${i}`]}{\" \"}\r\n                {informacionIngredientes[`strMeasure${i}`]}\r\n            </li>\r\n            );\r\n        }\r\n        }\r\n\r\n        return ingredientes\r\n    };\r\n\r\n    return ( \r\n        \r\n        <>\r\n        <Button variant=\"outline-primary\" onClick={() => {\r\n              guardarIdReceta(receta.idDrink);\r\n              guardarReceta({});\r\n              handleShow();\r\n        }}>Ver Receta</Button>\r\n\r\n        <Modal\r\n            show={show}\r\n            onHide={() => {\r\n                guardarIdReceta(null);\r\n                handleClose();\r\n              }}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>{informacion.strDrink}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h5 className=\"mt4\">Instrucciones</h5>\r\n                <p>{informacion.strInstructions}</p>\r\n                <h5 className=\"mt4\">Ingredientes</h5>\r\n                <ul>{mostrarIngredientes(informacion)}</ul>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"outline-primary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default ModalInfo;","import React from \"react\";\r\nimport { Col, Card } from 'react-bootstrap';\r\nimport ModalInfo from './Modal';\r\n\r\nconst Receta = ({ receta }) => {\r\n\r\n\r\n    return(   \r\n      <Col>\r\n        <Card className=\"mt-4\" style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`}/>\r\n          <Card.Body>\r\n            <Card.Title>{receta.strDrink}</Card.Title>\r\n            <ModalInfo className=\"align-content-center\" receta={receta}/>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    );\r\n};\r\n\r\nexport default Receta;","import React, { useContext } from \"react\";\r\nimport Receta from \"./Receta\";\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst ListaRecetas = () => {\r\n\r\n  // Extraer las recetas\r\n  const { recetas } = useContext(RecetasContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {recetas.map((receta) => (\r\n          <Receta key={receta.idDrink} receta={receta} />\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListaRecetas;","import React from 'react';\nimport '../src/components/app.css';\nimport Formulario from './components/Formulario';\nimport CategoriasProvider from './context/CategoriasContext';\nimport RecetasProvider from './context/RecetasContext';\nimport ModalProvider from './context/ModalContext';\nimport { Row, Container } from 'react-bootstrap';\nimport ListaRecetas from \"./components/ListaRecetas\";\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Container>\n            <Row>\n              <Container className=\"titulo\">\n                <h1 className=\"mt-4\">BUSCADOR DE BEBIDAS</h1>\n              </Container>\n            </Row>\n            <Row>\n            </Row>\n            <Row>\n              <Formulario />\n            </Row>\n            <Row>\n              <ListaRecetas />\n            </Row>\n          </Container>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}